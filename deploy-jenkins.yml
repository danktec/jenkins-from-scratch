---

- name: Launch an instance for Jenkins
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - vars.yml

  tasks:

    - name: Get vpc_id from name
      amazon.aws.ec2_vpc_net_info:
        filters:
          "tag:Name": "{{ vpc_name }}"
      register: vpc

    - name: Get first subnet from vpc
      amazon.aws.ec2_vpc_subnet_info:
        filters:
          vpc-id: "{{ vpc.vpcs[0].vpc_id }}"
      register: subnet

    - name: Get public IP
      ansible.builtin.uri:
        url: http://4.icanhazip.com
        return_content: true
      register: ip_response

    - name: Create key pair from local key material
      amazon.aws.ec2_key:
        name: "{{ key_name }}"
        region: "{{ region }}"
        state: present
        key_material: "{{ lookup('file', './jenkins-key.pub') }}"

    - name: Create a security group
      amazon.aws.ec2_security_group:
        name: "{{ sec_group }}"
        description: "Allow traffic to Jenkins from trusted source"
        region: "{{ region }}"
        vpc_id: "{{ vpc.vpcs[0].vpc_id }}"
        rules:
          - proto: tcp
            ports:
              - 22
              - 8080
            cidr_ip: "{{ ip_response.content }}/32"
        state: present

    - name: Launch EC2 instance
      amazon.aws.ec2_instance:
        name: "jenkins-from-scratch"
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ ami }}"
        region: "{{ region }}"
        vpc_subnet_id: "{{ subnet.subnets[0].subnet_id }}"
        security_group: "{{ sec_group }}"
        exact_count: 1
        wait: true
        tags:
          env: test
      register: ec2

    - name: Show instance public IP
      ansible.builtin.debug:
        msg: "Instance public IP: {{ ec2.instances[0].public_ip_address }}"

    - name: Write the endpoint IP to the testing dir
      ansible.builtin.copy:
        dest: ./terratest/endpoint_test_ip.txt
        content: "{{ ec2.instances[0].public_ip_address }}"
        mode: "0644"
      delegate_to: localhost

    - name: Wait for the instance to Launch
      ansible.builtin.wait_for:
        port: 22
        host: "{{ ec2.instances[0].public_ip_address }}"
        search_regex: OpenSSH
        delay: 3
        timeout: 300
      delegate_to: localhost

    - name: Refresh dynamic inventory after launching instance
      ansible.builtin.meta: refresh_inventory

- name: Connect to the instance using dynamic inventory
  hosts: "all"
  vars_files:
    - vars.yml

  tasks:

    - name: Update all packages to the latest version
      ansible.builtin.apt:
        upgrade: dist
      become: true

    - name: Install Docker
      ansible.builtin.apt:
        name: docker.io
        state: present
        update_cache: true
      become: true

    - name: Fix docker socket permissions for ubuntu user
      ansible.builtin.user:
        name: ubuntu
        groups: docker
        append: true
      become: true

    - name: Reset ssh connection to apply socket permisions change
      ansible.builtin.meta: reset_connection

    - name: Ensure /data exists
      ansible.builtin.file:
        path: /data
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: "0755"
      become: true

    - name: Copy files to remote
      ansible.builtin.copy:
        src: ./{{ item }}
        dest: ~/{{ item }}
        owner: ubuntu
        group: ubuntu
        mode: "0644"
      with_items:
        - Dockerfile
        - plugins.txt
        - jenkins-casc.yml

    - name: Build Jenkins image
      ansible.builtin.shell: docker build -t jenkins-from-scratch:latest .  # noqa no-changed-when command-instead-of-shell
      register: docker_build
    - name: Debug image build
      ansible.builtin.debug:
        var: docker_build.stdout_lines
      when: debug

    - name: Run Jenkins container
      community.docker.docker_container:
        name: jenkins
        image: jenkins-from-scratch:latest
        expose:
          - 8080:8080
        ports:
          - 8080:8080
        volumes:
          - /data/:/var/jenkins_home/
        env:
          CASC_JENKINS_CONFIG: /usr/share/jenkins/ref/jenkins-casc.yml

    - name: Wait while the Jenkins container wakes up
      ansible.builtin.wait_for:
        host: "localhost"
        port: 8080
        timeout: 300
        state: started

    - name: Dig up the initial admin password
      ansible.builtin.shell: docker exec -t jenkins cat /var/jenkins_home/secrets/initialAdminPassword  # noqa no-changed-when command-instead-of-shell
      register: admin_pass
    - name: Display password
      ansible.builtin.debug:
        var: admin_pass.stdout
